Assignment 1:
public class ArrayConversion {
    public static void main(String[] args) {
        int[] oneDArray = {1,2,3,4};
        int rows = 2;
        int cols = 2;
        int[][] twoDArray = convertTo2DArray(oneDArray, rows, cols);

        // Display the 2D array
        for (int i = 0; i < rows; i++) {
            System.out.print("[");
                     for (int j = 0; j < cols; j++) {
                System.out.print(twoDArray[i][j] + " ");
                if (j != cols - 1) {
                    System.out.print(", ");
                }
            }
            System.out.println("]");
            System.out.println();
        }
    }

    public static int[][] convertTo2DArray(int[] oneDArray, int rows, int cols) {
       

        int[][] twoDArray = new int[rows][cols];
        int index = 0;

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                twoDArray[i][j] = oneDArray[index];
                index++;
            }
        }

        return twoDArray;
    }
}



Assignment 2:
public class ArraingingCoins {

        public static int arrangeCoins(int n) {
          long left = 0, right = n;
          long k, curr;
          while (left <= right) {
            k = left + (right - left) / 2;
            curr = k * (k + 1) / 2;
      
            if (curr == n) return (int)k;
      
            if (n < curr) {
              right = k - 1;
            } else {
              left = k + 1;
            }
          }
          return (int)right;
        }
        public static void main (String[]args){
            int n=5;
            arrangeCoins(n);
            System.out.print(arrangeCoins(n));
        }
      }
    

Assignment 3:
import java.util.Arrays;

public class SquareArray {

        public static int[] sortedSquares(int[] nums) {
            int left=0, right=nums.length-1;

            int ans[]= new int[nums.length];
            
            int k=nums.length-1;
            while(left<=right){
                int max=(Math.abs(nums[left])<Math.abs(nums[right])? nums[right]: nums[left]);
                if(max==nums[right])
                    right--;
                    else 
                        left++;
                ans[k]=max*max;
                k--;
            }
            return ans;
        }
    
    
        
        public static void main(String[]args){
           int[] nums = {-4,-1,0,3,10};
           sortedSquares(nums);
           
           System.out.println(Arrays.toString(sortedSquares(nums)));


        }
    }
    

Assignment 4: